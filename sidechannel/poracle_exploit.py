import socket
import base64
import time
import settings

def exploit(ciphertext):
    for i in range(256):
        modified_ciphertext = modify(ciphertext, i)
        response, response_time = oracle(modified_ciphertext)
        print(f"Byte: {i}, Response time: {response_time:.6f} seconds")
        if response == b'OK':
            return i
    return None

def modify(ciphertext, byte):
    modified = bytearray(ciphertext)
    modified[-1] = byte
    return bytes(modified)

def oracle(ciphertext):
    with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as sock:
        sock.connect((settings.HOST, settings.PORT))
        start_time = time.time()
        sock.sendall(base64.b64encode(ciphertext))
        response = sock.recv(1024)
        end_time = time.time()
    return response, end_time - start_time

if __name__ == "__main__":
    ciphertext = base64.b64decode("U2FsdGVkX1/nQBswE9l9e+fqhKQY2DKUm76VIirA9L4=")
    byte = exploit(ciphertext)
    if byte is not None:
        print(f"Found byte: {byte}")
    else:
        print("Failed to find byte.")
